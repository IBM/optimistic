OPTIMISTIC_START
Math-Module(foo($bar, $c1 + $c2, True*Boolean*) ∉ {$c1, $c2}; SET $x + 2 FOR x IN $boo.doIt(); SET $x + 2 FOR x IN $foo; SET $x * 2 FOR x IN {1, 2} S.T. $x > 1 S.T. $x < 10; SET $x * 2 * $y FOR x IN {1, 2} S.T. $x > 1 S.T. $x < 10 FOR y IN {3, 5}; SET $x * $y FOR x IN {1, 2} FOR y IN {10, 20}; SET $x * $y FOR x IN SET $z + 1 FOR z IN {0, 1} FOR y IN {10, 20}; SET $x * $y FOR x IN SET $z + 1 FOR z IN {0, 1} FOR y IN SET $w + 10 FOR w IN {0, 10}; SET STREAM($row[$i] FOR row IN [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]) FOR i IN {0, 1, 2, 3}; SET STREAM($row[$i] FOR row IN [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]) FOR i IN SET $w FOR w IN {0, 1, 2, 3}; SET $y * $x * $z FOR y IN {1, 2, 3} S.T. $y ≠ 2 FOR x IN {-(1), 1, -(1)} S.T. $x ≠ $y FOR z IN {10, 100} S.T. $z > $x; $f[$a][$b]; $f[$a]; $x.do_something($a, $b); 100 < $values[0] ? $values[1] - 100 : $values[2]; max($values[1] - $values[2], 0); max($a, $b); $a < 0 ∧ $a ≥ -(2); $b > 0; False*Boolean*; $b < 0; True*Boolean*; False*Boolean*; $a + $c; $a * $c; $a - $c; $a / $c; $a ≥ $c; $a ≤ $c; $a = $c; $a ≠ $c; True*Boolean*)
OPTIMISTIC_END

