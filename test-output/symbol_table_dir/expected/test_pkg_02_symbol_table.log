File: test_pkg_02.py test.samples.symbol_table.pkg.test_pkg_02

Existing {'test.pkg.expr', 'test.pkg.optimistic.room_allocation.room_allocation'}
Priority [('test.samples.symbol_table.pkg.test_pkg_02', 'test.pkg.expr'), ('test.samples.symbol_table.pkg.test_pkg_02', 'test.pkg.optimistic.room_allocation.room_allocation')]
Registry {'test.samples.symbol_table.pkg.test_pkg_02': {'test.samples.symbol_table.pkg.test_pkg_02': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/samples/symbol_table/pkg'), 'file': 'test_pkg_02.py', 'ast': FILE(IMPORT(AS(test.pkg.expr→expression))
IMPORT(REF(test.pkg.optimistic.room_allocation.room_allocation)))}}, 'test.pkg.expr': {'test.pkg.expr': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/pkg'), 'file': 'expr.py', 'ast': FILE()}}, 'test.pkg.optimistic.room_allocation.room_allocation': {'test.pkg.optimistic.room_allocation.room_allocation': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/pkg/optimistic/room_allocation'), 'file': 'room_allocation.py', 'ast': FILE()}}}
Topological Sort ['test.pkg.expr', 'test.pkg.optimistic.room_allocation.room_allocation', 'test.samples.symbol_table.pkg.test_pkg_02']
Planned Registry -[{'test.pkg.expr': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/pkg'), 'file': 'expr.py', 'ast': FILE()}}, {'test.pkg.optimistic.room_allocation.room_allocation': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/pkg/optimistic/room_allocation'), 'file': 'room_allocation.py', 'ast': FILE()}}, {'test.samples.symbol_table.pkg.test_pkg_02': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/samples/symbol_table/pkg'), 'file': 'test_pkg_02.py', 'ast': FILE(IMPORT(AS(test.pkg.expr→expression))
IMPORT(REF(test.pkg.optimistic.room_allocation.room_allocation)))}}]
Symbol Registry -[{'test.samples.symbol_table.pkg.test_pkg_02': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/samples/symbol_table/pkg'), 'file': 'test_pkg_02.py', 'ast': FILE(IMPORT(AS(test.pkg.expr→expression))
IMPORT(REF(test.pkg.optimistic.room_allocation.room_allocation))
CALL(GETATTR(REF(*python-builtins*.test.pkg.expression), IFTE); )
CALL(GETATTR(GETATTR(GETATTR(GETATTR(GETATTR(REF(test), pkg), optimistic), room_allocation), room_allocation), Floor); CONST('designatorPP'))), 'model': Math-Module(IFTE(); room_allocation(room_allocation($optimistic)).Floor(designatorPP*String*))}}, {'test.pkg.expr': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/pkg'), 'file': 'expr.py', 'ast': FILE(CLASS(IFTE: STMTS(DEF(__init__; PARMS(PARM(self/pos+kw)): STMTS(RETURN(EXPRS(CONST('IFTE')))))))), 'model': Math-Module(CLASS IFTE:  DEFINE self.__init__(): Any = IFTE*String*)}}, {'test.pkg.optimistic.room_allocation.room_allocation': {'location': WindowsPath('C:/workspace/git/optimistic/eco-abstractions/test/pkg/optimistic/room_allocation'), 'file': 'room_allocation.py', 'ast': FILE(CLASS(Floor: STMTS(DEF(__init__; PARMS(PARM(self/pos+kw)): STMTS(RETURN(EXPRS(CALL(REF(*python-builtins*.test.pkg.optimistic.room_allocation.room_allocation.Employee); )))))))
CLASS(Employee: STMTS(DEF(__init__; PARMS(PARM(self/pos+kw)): STMTS(RETURN(EXPRS(CONST(1)))))))), 'model': Math-Module(CLASS Floor:  DEFINE self.__init__(): Any = Employee(); CLASS Employee:  DEFINE self.__init__(): Any = 1)}}]
Symbol Table builtin frame
Frame-*python-builtins* [*python-builtins*] - Parent [None] : (abc, abs, all, any, ascii, bin, bool, breakpoint, bytearray, bytes, callable, chr, classmethod, compile, complex, dataclasses, datetime, delattr, dict, dir, divmod, enumerate, eval, exec, filter, float, format, frozenset, getattr, globals, hasattr, hash, help, hex, id, input, int, isinstance, issubclass, iter, itertools, len, list, locals, map, math, max, memoryview, min, next, object, oct, open, operator, optimistic_client, ord, pow, print, property, range, repr, reversed, round, set, setattr, slice, sorted, staticmethod, str, sum, super, test, tuple, type, typing, vars, zip)
    Frame-*module* [itertools] - Parent [*python-builtins*] : (chain, tee)
        Frame-Class  [chain] - Parent [itertools] : (from_iterable)
            Frame-Function  [from_iterable - Parent [chain] without local Variables
    Frame-*module* [datetime] - Parent [*python-builtins*] : (datetime)
        Frame-Class  [datetime - Parent [datetime] without local Variables
    Frame-*module* [operator] - Parent [*python-builtins*] : (attrgetter)
    Frame-*module* [abc] - Parent [*python-builtins*] : (ABC)
        Frame-Class  [ABC - Parent [abc] without local Variables
    Frame-*module* [typing] - Parent [*python-builtins*] : (Any, Collection, FrozenSet, NewType, Sequence, Set, Tuple)
        Frame-Class  [Sequence - Parent [typing] without local Variables
    Frame-*module* [math] - Parent [*python-builtins*] : (ceil, pow)
    Frame-*module* [dataclasses] - Parent [*python-builtins*] : (Field, addict, asdict, dataclass, field, fields)
        Frame-Class  [Field - Parent [dataclasses] without local Variables
        Frame-Function  [dataclass - Parent [dataclasses] without local Variables
        Frame-Function  [field - Parent [dataclasses] without local Variables
        Frame-Function  [fields - Parent [dataclasses] without local Variables
        Frame-Function  [addict - Parent [dataclasses] without local Variables
    Frame-*module* [optimistic_client] - Parent [*python-builtins*] : (meta, optimization, unique_assignment, unique_solution)
        Frame-*module* [optimization] - Parent [optimistic_client] : (OptimizationProblem)
            Frame-Class  [OptimizationProblem] - Parent [optimization] : (check_constraints, compute_objective)
                Frame-Function  [check_constraints - Parent [OptimizationProblem] without local Variables
                Frame-Function  [compute_objective - Parent [OptimizationProblem] without local Variables
        Frame-*module* [unique_assignment] - Parent [optimistic_client] : (UniqueAssignment, assignment)
            Frame-Function  [assignment - Parent [unique_assignment] without local Variables
            Frame-Class  [UniqueAssignment] - Parent [unique_assignment] : (has_unique_assignment, non_unique_assignment, unique_assignment)
                Frame-Function  [has_unique_assignment - Parent [UniqueAssignment] without local Variables
                Frame-Function  [unique_assignment - Parent [UniqueAssignment] without local Variables
                Frame-Function  [non_unique_assignment - Parent [UniqueAssignment] without local Variables
        Frame-*module* [unique_solution] - Parent [optimistic_client] : (solution_attribute, unique_solution)
            Frame-Function  [unique_solution - Parent [unique_solution] without local Variables
            Frame-Function  [solution_attribute - Parent [unique_solution] without local Variables
        Frame-*module* [meta] - Parent [optimistic_client] : (infrastructure, utils)
            Frame-*module* [utils] - Parent [meta] : (builtin, constraint, count, memoize, metadata, minimize)
                Frame-Function  [count - Parent [utils] without local Variables
                Frame-Function  [memoize - Parent [utils] without local Variables
                Frame-Function  [metadata - Parent [utils] without local Variables
                Frame-Function  [builtin - Parent [utils] without local Variables
                Frame-Function  [constraint - Parent [utils] without local Variables
                Frame-Function  [minimize - Parent [utils] without local Variables
            Frame-*module* [infrastructure] - Parent [meta] : (KeepMembersMixin)
                Frame-Class  [KeepMembersMixin] - Parent [infrastructure] : (members)
                    Frame-Function  [members - Parent [KeepMembersMixin] without local Variables
    Frame-*module* [test] - Parent [*python-builtins*] : (pkg, samples)
        Frame-*module* [pkg] - Parent [test] : (expr, optimistic)
            Frame-*module* [expr] - Parent [pkg] : (IFTE)
                Frame-Class  [IFTE] - Parent [expr] : (__init__)
                    Frame-Function  [__init__] - Parent [IFTE] : (self)
            Frame-*module* [optimistic] - Parent [pkg] : (room_allocation)
                Frame-*module* [room_allocation] - Parent [optimistic] : (room_allocation)
                    Frame-*module* [room_allocation] - Parent [room_allocation] : (Employee, Floor)
                        Frame-Class  [Floor] - Parent [room_allocation] : (__init__)
                            Frame-Function  [__init__] - Parent [Floor] : (self)
                        Frame-Class  [Employee] - Parent [room_allocation] : (__init__)
                            Frame-Function  [__init__] - Parent [Employee] : (self)
        Frame-*module* [samples] - Parent [test] : (symbol_table)
            Frame-*module* [symbol_table] - Parent [samples] : (pkg)
                Frame-*module* [pkg] - Parent [symbol_table] : (test_pkg_02)
                    Frame-*module* [test_pkg_02 - Parent [pkg] without local Variables
Frame Imports:
   test -> [Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=..., children=[Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=..., children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
   *python-builtins*.test -> [Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=..., children=[Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=..., children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
   pkg -> [Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[..., Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=..., children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
   *python-builtins*.test.pkg -> [Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[..., Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=..., children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
   expression -> [Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[..., Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), children=[..., Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
   optimistic -> [Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[..., Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=..., children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), ...], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
   *python-builtins*.test.pkg.optimistic -> [Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[..., Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=..., children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), ...], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=..., children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
   room_allocation -> [Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[..., Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=..., children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), ...], table=<SymbolTable for top in any>, mockup=False), children=[...], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
   *python-builtins*.test.pkg.optimistic.room_allocation.room_allocation -> [Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=Frame(name='optimistic', kind=<FrameKind.*module*: 2>, variables={Variable(name='room_allocation', type=None)}, parent=Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimistic', type=None), Variable(name='expr', type=None)}, parent=Frame(name='test', kind=<FrameKind.*module*: 2>, variables={Variable(name='samples', type=None), Variable(name='pkg', type=None)}, parent=Frame(name='*python-builtins*', kind=<FrameKind.*python-builtins*: 1>, variables={Variable(name='input', type=None), Variable(name='hash', type=None), Variable(name='optimistic_client', type=None), Variable(name='complex', type=None), Variable(name='memoryview', type=None), Variable(name='frozenset', type=None), Variable(name='set', type=None), Variable(name='slice', type=None), Variable(name='sorted', type=None), Variable(name='dataclasses', type=None), Variable(name='object', type=None), Variable(name='map', type=None), Variable(name='super', type=None), Variable(name='repr', type=None), Variable(name='staticmethod', type=None), Variable(name='vars', type=None), Variable(name='delattr', type=None), Variable(name='iter', type=None), Variable(name='zip', type=None), Variable(name='test', type=None), Variable(name='next', type=None), Variable(name='type', type=None), Variable(name='issubclass', type=None), Variable(name='list', type=None), Variable(name='exec', type=None), Variable(name='round', type=None), Variable(name='all', type=None), Variable(name='dir', type=None), Variable(name='reversed', type=None), Variable(name='open', type=None), Variable(name='str', type=None), Variable(name='range', type=None), Variable(name='hex', type=None), Variable(name='dict', type=None), Variable(name='compile', type=None), Variable(name='filter', type=None), Variable(name='getattr', type=None), Variable(name='bool', type=None), Variable(name='id', type=None), Variable(name='abs', type=None), Variable(name='bin', type=None), Variable(name='bytearray', type=None), Variable(name='min', type=None), Variable(name='breakpoint', type=None), Variable(name='itertools', type=None), Variable(name='bytes', type=None), Variable(name='any', type=None), Variable(name='chr', type=None), Variable(name='property', type=None), Variable(name='operator', type=None), Variable(name='max', type=None), Variable(name='isinstance', type=None), Variable(name='int', type=None), Variable(name='hasattr', type=None), Variable(name='len', type=None), Variable(name='pow', type=None), Variable(name='math', type=None), Variable(name='float', type=None), Variable(name='enumerate', type=None), Variable(name='ord', type=None), Variable(name='classmethod', type=None), Variable(name='help', type=None), Variable(name='sum', type=None), Variable(name='typing', type=None), Variable(name='setattr', type=None), Variable(name='globals', type=None), Variable(name='print', type=None), Variable(name='datetime', type=None), Variable(name='callable', type=None), Variable(name='abc', type=None), Variable(name='ascii', type=None), Variable(name='oct', type=None), Variable(name='divmod', type=None), Variable(name='locals', type=None), Variable(name='format', type=None), Variable(name='eval', type=None), Variable(name='tuple', type=None)}, parent=None, children=[Frame(name='itertools', kind=<FrameKind.*module*: 2>, variables={Variable(name='chain', type=None), Variable(name='tee', type=None)}, parent=..., children=[Frame(name='chain', kind=<FrameKind.Class : 3>, variables={Variable(name='from_iterable', type=None)}, parent=..., children=[Frame(name='from_iterable', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='datetime', kind=<FrameKind.*module*: 2>, variables={Variable(name='datetime', type=None)}, parent=..., children=[Frame(name='datetime', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='operator', kind=<FrameKind.*module*: 2>, variables={Variable(name='attrgetter', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='abc', kind=<FrameKind.*module*: 2>, variables={Variable(name='ABC', type=None)}, parent=..., children=[Frame(name='ABC', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='typing', kind=<FrameKind.*module*: 2>, variables={Variable(name='Set', type=None), Variable(name='Collection', type=None), Variable(name='FrozenSet', type=None), Variable(name='NewType', type=None), Variable(name='Tuple', type=None), Variable(name='Any', type=None), Variable(name='Sequence', type=None)}, parent=..., children=[Frame(name='Sequence', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='math', kind=<FrameKind.*module*: 2>, variables={Variable(name='pow', type=None), Variable(name='ceil', type=None)}, parent=..., children=[], table=None, mockup=False), Frame(name='dataclasses', kind=<FrameKind.*module*: 2>, variables={Variable(name='field', type=None), Variable(name='fields', type=None), Variable(name='dataclass', type=None), Variable(name='addict', type=None), Variable(name='asdict', type=None), Variable(name='Field', type=None)}, parent=..., children=[Frame(name='Field', kind=<FrameKind.Class : 3>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='dataclass', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='field', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='fields', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='addict', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='optimistic_client', kind=<FrameKind.*module*: 2>, variables={Variable(name='optimization', type=None), Variable(name='meta', type=None), Variable(name='unique_assignment', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='optimization', kind=<FrameKind.*module*: 2>, variables={Variable(name='OptimizationProblem', type=None)}, parent=..., children=[Frame(name='OptimizationProblem', kind=<FrameKind.Class : 3>, variables={Variable(name='compute_objective', type=None), Variable(name='check_constraints', type=None)}, parent=..., children=[Frame(name='check_constraints', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='compute_objective', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.*module*: 2>, variables={Variable(name='UniqueAssignment', type=None), Variable(name='assignment', type=None)}, parent=..., children=[Frame(name='assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='UniqueAssignment', kind=<FrameKind.Class : 3>, variables={Variable(name='non_unique_assignment', type=None), Variable(name='unique_assignment', type=None), Variable(name='has_unique_assignment', type=None)}, parent=..., children=[Frame(name='has_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='non_unique_assignment', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), Frame(name='unique_solution', kind=<FrameKind.*module*: 2>, variables={Variable(name='solution_attribute', type=None), Variable(name='unique_solution', type=None)}, parent=..., children=[Frame(name='unique_solution', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='solution_attribute', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='meta', kind=<FrameKind.*module*: 2>, variables={Variable(name='infrastructure', type=None), Variable(name='utils', type=None)}, parent=..., children=[Frame(name='utils', kind=<FrameKind.*module*: 2>, variables={Variable(name='constraint', type=None), Variable(name='minimize', type=None), Variable(name='count', type=None), Variable(name='metadata', type=None), Variable(name='memoize', type=None), Variable(name='builtin', type=None)}, parent=..., children=[Frame(name='count', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='memoize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='metadata', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='builtin', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='constraint', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False), Frame(name='minimize', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False), Frame(name='infrastructure', kind=<FrameKind.*module*: 2>, variables={Variable(name='KeepMembersMixin', type=None)}, parent=..., children=[Frame(name='KeepMembersMixin', kind=<FrameKind.Class : 3>, variables={Variable(name='members', type=None)}, parent=..., children=[Frame(name='members', kind=<FrameKind.Function : 4>, variables=set(), parent=..., children=[], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False)], table=None, mockup=False), ...], table=None, mockup=False), children=[..., Frame(name='samples', kind=<FrameKind.*module*: 2>, variables={Variable(name='symbol_table', type=None)}, parent=..., children=[Frame(name='symbol_table', kind=<FrameKind.*module*: 2>, variables={Variable(name='pkg', type=None)}, parent=..., children=[Frame(name='pkg', kind=<FrameKind.*module*: 2>, variables={Variable(name='test_pkg_02', type=None)}, parent=..., children=[Frame(name='test_pkg_02', kind=<FrameKind.*module*: 2>, variables=set(), parent=..., children=[], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='expr', kind=<FrameKind.*module*: 2>, variables={Variable(name='IFTE', type=None)}, parent=..., children=[Frame(name='IFTE', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for IFTE in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False), ...], table=<SymbolTable for top in any>, mockup=False), children=[...], table=<SymbolTable for top in any>, mockup=False), children=[Frame(name='room_allocation', kind=<FrameKind.*module*: 2>, variables={Variable(name='Floor', type=None), Variable(name='Employee', type=None)}, parent=..., children=[Frame(name='Floor', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Floor in any>, mockup=False), Frame(name='Employee', kind=<FrameKind.Class : 3>, variables={Variable(name='__init__', type=None)}, parent=..., children=[Frame(name='__init__', kind=<FrameKind.Function : 4>, variables={Variable(name='self', type=None)}, parent=..., children=[], table=<Function SymbolTable for __init__ in any>, mockup=False)], table=<Class SymbolTable for Employee in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)], table=<SymbolTable for top in any>, mockup=False)]
